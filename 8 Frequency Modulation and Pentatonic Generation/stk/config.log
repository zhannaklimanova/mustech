This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by STK configure 4.6.2, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  $ ./configure

## --------- ##
## Platform. ##
## --------- ##

hostname = Zhannas-MacBook-Pro.local
uname -m = x86_64
uname -r = 20.5.0
uname -s = Darwin
uname -v = Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64
Kernel configured for up to 8 processors.
4 processors are physically available.
4 processors are logically available.
Processor type: x86_64h (Intel x86-64h Haswell)
Processors active: 0 1 2 3 4 5 6 7
Primary memory available: 8.00 gigabytes
Default processor set: 497 tasks, 2182 threads, 8 processors
Load average: 3.24, Mach factor: 4.75
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /Library/Frameworks/Python.framework/Versions/3.7/bin/
PATH: /usr/local/bin/
PATH: /usr/bin/
PATH: /bin/
PATH: /usr/sbin/
PATH: /sbin/
PATH: /Library/TeX/texbin/
PATH: /Library/Apple/usr/bin/
PATH: /Applications/Postgres.app/Contents/Versions/latest/bin/
PATH: /Users/zklimanova/opt/anaconda3/bin/
PATH: /Users/zklimanova/opt/anaconda3/condabin/
PATH: /Library/Frameworks/Python.framework/Versions/3.7/bin/


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2692: looking for aux files: config.guess config.sub
configure:2705:  trying ./config/
configure:2734:   ./config/config.guess found
configure:2734:   ./config/config.sub found
configure:2993: checking for g++
configure:3014: found /usr/bin/g++
configure:3025: result: g++
configure:3052: checking for C++ compiler version
configure:3061: g++ --version >&5
Apple clang version 12.0.5 (clang-1205.0.22.11)
Target: x86_64-apple-darwin20.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
configure:3072: $? = 0
configure:3061: g++ -v >&5
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 12.0.5 (clang-1205.0.22.11)
Target: x86_64-apple-darwin20.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:3072: $? = 0
configure:3061: g++ -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:3072: $? = 1
configure:3061: g++ -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:3072: $? = 1
configure:3092: checking whether the C++ compiler works
configure:3114: g++    conftest.cpp  >&5
configure:3118: $? = 0
configure:3168: result: yes
configure:3171: checking for C++ compiler default output file name
configure:3173: result: a.out
configure:3179: checking for suffix of executables
configure:3186: g++ -o conftest    conftest.cpp  >&5
configure:3190: $? = 0
configure:3213: result: 
configure:3235: checking whether we are cross compiling
configure:3243: g++ -o conftest    conftest.cpp  >&5
configure:3247: $? = 0
configure:3254: ./conftest
configure:3258: $? = 0
configure:3273: result: no
configure:3278: checking for suffix of object files
configure:3301: g++ -c   conftest.cpp >&5
configure:3305: $? = 0
configure:3327: result: o
configure:3331: checking whether the compiler supports GNU C++
configure:3351: g++ -c   conftest.cpp >&5
configure:3351: $? = 0
configure:3361: result: yes
configure:3372: checking whether g++ accepts -g
configure:3393: g++ -c -g  conftest.cpp >&5
configure:3393: $? = 0
configure:3437: result: yes
configure:3457: checking for g++ option to enable C++11 features
configure:3472: g++  -c -g -O2  conftest.cpp >&5
conftest.cpp:55:3: error: "Compiler does not advertise C++11 conformance"
# error "Compiler does not advertise C++11 conformance"
  ^
conftest.cpp:60:3: error: unknown type name 'constexpr'
  constexpr int get_val() { return 20; }
  ^
conftest.cpp:72:17: error: delegating constructors are permitted only in C++11
    delegate(): delegate(2354) {}
                ^~~~~~~~
conftest.cpp:83:26: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]
    virtual int getval() override final { return this->n * 2; }
                         ^
conftest.cpp:83:35: warning: 'final' keyword is a C++11 extension [-Wc++11-extensions]
    virtual int getval() override final { return this->n * 2; }
                                  ^
conftest.cpp:90:16: warning: defaulted function definitions are a C++11 extension [-Wc++11-extensions]
    nocopy() = default;
               ^
conftest.cpp:91:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]
    nocopy(const nocopy&) = delete;
                            ^
conftest.cpp:92:41: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]
    nocopy & operator=(const nocopy&) = delete;
                                        ^
conftest.cpp:104:25: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  template <typename V> auto sum(V first) -> V
                        ^
conftest.cpp:104:25: error: 'auto' not allowed in function return type
  template <typename V> auto sum(V first) -> V
                        ^~~~
conftest.cpp:104:42: error: expected ';' at end of declaration
  template <typename V> auto sum(V first) -> V
                                         ^
                                         ;
conftest.cpp:104:43: error: cannot use arrow operator on a type
  template <typename V> auto sum(V first) -> V
                                          ^
conftest.cpp:108:33: warning: variadic templates are a C++11 extension [-Wc++11-extensions]
  template <typename V, typename... Args> auto sum(V first, Args... rest) -> V
                                ^
conftest.cpp:108:43: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  template <typename V, typename... Args> auto sum(V first, Args... rest) -> V
                                          ^
conftest.cpp:108:43: error: 'auto' not allowed in function return type
  template <typename V, typename... Args> auto sum(V first, Args... rest) -> V
                                          ^~~~
conftest.cpp:108:74: error: expected ';' at end of declaration
  template <typename V, typename... Args> auto sum(V first, Args... rest) -> V
                                                                         ^
                                                                         ;
conftest.cpp:108:75: error: cannot use arrow operator on a type
  template <typename V, typename... Args> auto sum(V first, Args... rest) -> V
                                                                          ^
conftest.cpp:132:3: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  auto a1 = 6538;
  ^
conftest.cpp:133:3: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  auto a2 = 48573953.4;
  ^
conftest.cpp:134:3: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  auto a3 = "String literal";
  ^
conftest.cpp:137:8: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  for (auto i = a3; *i; ++i) { total += *i; }
       ^
conftest.cpp:153:8: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  for (auto &x : array) { x += 23; }
       ^
conftest.cpp:153:16: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]
  for (auto &x : array) { x += 23; }
               ^
conftest.cpp:158:17: error: expected expression
  assert (eval ([](int x) { return x*2; }, 21) == 42);
                ^
conftest.cpp:160:17: error: expected expression
  assert (eval ([&](double x) { return d += x; }, 3.0) == 5.0);
                ^
conftest.cpp:162:17: error: expected expression
  assert (eval ([=](double x) mutable { return d += x; }, 4.0) == 9.0);
                ^
conftest.cpp:168:3: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  auto a = sum(1);
  ^
conftest.cpp:168:12: error: no matching function for call to 'sum'
  auto a = sum(1);
           ^~~
conftest.cpp:169:3: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  auto b = sum(1, 2);
  ^
conftest.cpp:169:12: error: no matching function for call to 'sum'
  auto b = sum(1, 2);
           ^~~
conftest.cpp:170:3: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  auto c = sum(1.0, 2.0, 3.0);
  ^
conftest.cpp:170:12: error: no matching function for call to 'sum'
  auto c = sum(1.0, 2.0, 3.0);
           ^~~
conftest.cpp:175:25: warning: empty parentheses interpreted as a function declaration [-Wvexing-parse]
  cxx11test::delegate d2();
                        ^~
conftest.cpp:175:25: note: remove parentheses to declare a variable
  cxx11test::delegate d2();
                        ^~
conftest.cpp:188:16: error: found '<::' after a template name which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
  test_template<::test_template<int>> v(test_template<int>(12));
               ^~~
               < ::
conftest.cpp:188:36: error: a space is required between consecutive right angle brackets (use '> >')
  test_template<::test_template<int>> v(test_template<int>(12));
                                   ^~
                                   > >
conftest.cpp:192:22: error: use of undeclared identifier 'u8'
  char const *utf8 = u8"UTF-8 string \u2500";
                     ^
conftest.cpp:192:24: error: expected ';' at end of declaration
  char const *utf8 = u8"UTF-8 string \u2500";
                       ^
                       ;
fatal error: too many errors emitted, stopping now [-ferror-limit=]
18 warnings and 20 errors generated.
configure:3472: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "STK"
| #define PACKAGE_TARNAME "stk"
| #define PACKAGE_VERSION "4.6.2"
| #define PACKAGE_STRING "STK 4.6.2"
| #define PACKAGE_BUGREPORT "gary.scavone@mcgill.ca"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| 
| // Does the compiler advertise C++98 conformance?
| #if !defined __cplusplus || __cplusplus < 199711L
| # error "Compiler does not advertise C++98 conformance"
| #endif
| 
| // These inclusions are to reject old compilers that
| // lack the unsuffixed header files.
| #include <cstdlib>
| #include <exception>
| 
| // <cassert> and <cstring> are *not* freestanding headers in C++98.
| extern void assert (int);
| namespace std {
|   extern int strcmp (const char *, const char *);
| }
| 
| // Namespaces, exceptions, and templates were all added after "C++ 2.0".
| using std::exception;
| using std::strcmp;
| 
| namespace {
| 
| void test_exception_syntax()
| {
|   try {
|     throw "test";
|   } catch (const char *s) {
|     // Extra parentheses suppress a warning when building autoconf itself,
|     // due to lint rules shared with more typical C programs.
|     assert (!(strcmp) (s, "test"));
|   }
| }
| 
| template <typename T> struct test_template
| {
|   T const val;
|   explicit test_template(T t) : val(t) {}
|   template <typename U> T add(U u) { return static_cast<T>(u) + val; }
| };
| 
| } // anonymous namespace
| 
| 
| // Does the compiler advertise C++ 2011 conformance?
| #if !defined __cplusplus || __cplusplus < 201103L
| # error "Compiler does not advertise C++11 conformance"
| #endif
| 
| namespace cxx11test
| {
|   constexpr int get_val() { return 20; }
| 
|   struct testinit
|   {
|     int i;
|     double d;
|   };
| 
|   class delegate
|   {
|   public:
|     delegate(int n) : n(n) {}
|     delegate(): delegate(2354) {}
| 
|     virtual int getval() { return this->n; };
|   protected:
|     int n;
|   };
| 
|   class overridden : public delegate
|   {
|   public:
|     overridden(int n): delegate(n) {}
|     virtual int getval() override final { return this->n * 2; }
|   };
| 
|   class nocopy
|   {
|   public:
|     nocopy(int i): i(i) {}
|     nocopy() = default;
|     nocopy(const nocopy&) = delete;
|     nocopy & operator=(const nocopy&) = delete;
|   private:
|     int i;
|   };
| 
|   // for testing lambda expressions
|   template <typename Ret, typename Fn> Ret eval(Fn f, Ret v)
|   {
|     return f(v);
|   }
| 
|   // for testing variadic templates and trailing return types
|   template <typename V> auto sum(V first) -> V
|   {
|     return first;
|   }
|   template <typename V, typename... Args> auto sum(V first, Args... rest) -> V
|   {
|     return first + sum(rest...);
|   }
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
|   assert (argc);
|   assert (! argv[0]);
| {
|   test_exception_syntax ();
|   test_template<double> tt (2.0);
|   assert (tt.add (4) == 6.0);
|   assert (true && !false);
| }
| 
|   
| {
|   // Test auto and decltype
|   auto a1 = 6538;
|   auto a2 = 48573953.4;
|   auto a3 = "String literal";
| 
|   int total = 0;
|   for (auto i = a3; *i; ++i) { total += *i; }
| 
|   decltype(a2) a4 = 34895.034;
| }
| {
|   // Test constexpr
|   short sa[cxx11test::get_val()] = { 0 };
| }
| {
|   // Test initializer lists
|   cxx11test::testinit il = { 4323, 435234.23544 };
| }
| {
|   // Test range-based for
|   int array[] = {9, 7, 13, 15, 4, 18, 12, 10, 5, 3,
|                  14, 19, 17, 8, 6, 20, 16, 2, 11, 1};
|   for (auto &x : array) { x += 23; }
| }
| {
|   // Test lambda expressions
|   using cxx11test::eval;
|   assert (eval ([](int x) { return x*2; }, 21) == 42);
|   double d = 2.0;
|   assert (eval ([&](double x) { return d += x; }, 3.0) == 5.0);
|   assert (d == 5.0);
|   assert (eval ([=](double x) mutable { return d += x; }, 4.0) == 9.0);
|   assert (d == 5.0);
| }
| {
|   // Test use of variadic templates
|   using cxx11test::sum;
|   auto a = sum(1);
|   auto b = sum(1, 2);
|   auto c = sum(1.0, 2.0, 3.0);
| }
| {
|   // Test constructor delegation
|   cxx11test::delegate d1;
|   cxx11test::delegate d2();
|   cxx11test::delegate d3(45);
| }
| {
|   // Test override and final
|   cxx11test::overridden o1(55464);
| }
| {
|   // Test nullptr
|   char *c = nullptr;
| }
| {
|   // Test template brackets
|   test_template<::test_template<int>> v(test_template<int>(12));
| }
| {
|   // Unicode literals
|   char const *utf8 = u8"UTF-8 string \u2500";
|   char16_t const *utf16 = u"UTF-8 string \u2500";
|   char32_t const *utf32 = U"UTF-32 string \u2500";
| }
| 
|   return ok;
| }
| 
configure:3490: result: none needed
configure:3569: checking whether g++ supports C++11 features with -std=c++11
configure:3868: g++ -std=c++11 -c -g -O2  conftest.cpp >&5
configure:3868: $? = 0
configure:3878: result: yes
configure:4041: checking for C++ compiler version
configure:4050: g++ -std=c++11 --version >&5
Apple clang version 12.0.5 (clang-1205.0.22.11)
Target: x86_64-apple-darwin20.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:4061: $? = 0
configure:4050: g++ -std=c++11 -v >&5
Apple clang version 12.0.5 (clang-1205.0.22.11)
Target: x86_64-apple-darwin20.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
clang: warning: argument unused during compilation: '-std=c++11' [-Wunused-command-line-argument]
configure:4061: $? = 0
configure:4050: g++ -std=c++11 -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:4061: $? = 1
configure:4050: g++ -std=c++11 -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:4061: $? = 1
configure:4065: checking whether the compiler supports GNU C++
configure:4095: result: yes
configure:4106: checking whether g++ -std=c++11 accepts -g
configure:4171: result: yes
configure:4191: checking for g++ -std=c++11 option to enable C++11 features
configure:4224: result: none needed
configure:4336: checking for ranlib
configure:4357: found /usr/bin/ranlib
configure:4368: result: ranlib
configure:4392: checking for ar
configure:4415: found /usr/bin/ar
configure:4428: result: /usr/bin/ar
configure:4503: checking for gcc
configure:4524: found /usr/bin/gcc
configure:4535: result: gcc
configure:4888: checking for C compiler version
configure:4897: gcc --version >&5
Apple clang version 12.0.5 (clang-1205.0.22.11)
Target: x86_64-apple-darwin20.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
configure:4908: $? = 0
configure:4897: gcc -v >&5
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 12.0.5 (clang-1205.0.22.11)
Target: x86_64-apple-darwin20.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:4908: $? = 0
configure:4897: gcc -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:4908: $? = 1
configure:4897: gcc -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:4908: $? = 1
configure:4897: gcc -version >&5
clang: error: unknown argument '-version'; did you mean '--version'?
clang: error: no input files
configure:4908: $? = 1
configure:4912: checking whether the compiler supports GNU C
configure:4932: gcc -c   conftest.c >&5
configure:4932: $? = 0
configure:4942: result: yes
configure:4953: checking whether gcc accepts -g
configure:4974: gcc -c -g  conftest.c >&5
configure:4974: $? = 0
configure:5018: result: yes
configure:5038: checking for gcc option to enable C11 features
configure:5053: gcc  -c -g -O2  conftest.c >&5
configure:5053: $? = 0
configure:5071: result: none needed
configure:5186: checking for stdio.h
configure:5186: gcc -c -g -O2  conftest.c >&5
configure:5186: $? = 0
configure:5186: result: yes
configure:5186: checking for stdlib.h
configure:5186: gcc -c -g -O2  conftest.c >&5

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_c_compiler_gnu=yes
ac_cv_cxx_compiler_gnu=yes
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=
ac_cv_env_CXX_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_header_stdio_h=yes
ac_cv_objext=o
ac_cv_path_AR=/usr/bin/ar
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_CXX=g++
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_cc_c11=
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_prog_cxx_11=no
ac_cv_prog_cxx_g=yes
ac_cv_prog_cxx_stdcxx=
ax_cv_cxx_compile_cxx11__std_cpp11=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

AR='/usr/bin/ar'
CC='gcc'
CFLAGS='-g -O2'
CPP=''
CPPFLAGS=''
CXX='g++ -std=c++11'
CXXFLAGS='-g -O2'
DEFS=''
ECHO_C='\c'
ECHO_N=''
ECHO_T=''
EGREP=''
EXEEXT=''
GREP=''
GXX='yes'
HAVE_CXX11='1'
LDFLAGS=''
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
OBJEXT='o'
PACKAGE_BUGREPORT='gary.scavone@mcgill.ca'
PACKAGE_NAME='STK'
PACKAGE_STRING='STK 4.6.2'
PACKAGE_TARNAME='stk'
PACKAGE_URL=''
PACKAGE_VERSION='4.6.2'
PATH_SEPARATOR=':'
RANLIB='ranlib'
SHELL='/bin/sh'
ac_ct_CC='gcc'
ac_ct_CXX='g++'
api=''
bindir='${exec_prefix}/bin'
build=''
build_alias=''
build_cpu=''
build_os=''
build_shared=''
build_static=''
build_vendor=''
byte_order=''
cppflag=''
cxxflag=''
datadir='${datarootdir}'
datarootdir='${prefix}/share'
debug=''
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='NONE'
host=''
host_alias=''
host_cpu=''
host_os=''
host_vendor=''
htmldir='${docdir}'
include=''
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
libflags=''
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
object_path=''
objects=''
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='NONE'
program_transform_name='s,x,x,'
psdir='${docdir}'
rawwaves=''
realtime=''
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedlib=''
sharedname=''
sharedstatedir='${prefix}/com'
sound_api=''
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "STK"
#define PACKAGE_TARNAME "stk"
#define PACKAGE_VERSION "4.6.2"
#define PACKAGE_STRING "STK 4.6.2"
#define PACKAGE_BUGREPORT "gary.scavone@mcgill.ca"
#define PACKAGE_URL ""
#define HAVE_CXX11 1
#define HAVE_STDIO_H 1

configure: caught signal 2
configure: exit 1
